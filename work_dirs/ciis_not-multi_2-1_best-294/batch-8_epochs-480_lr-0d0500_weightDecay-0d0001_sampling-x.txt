ciis_not-multi.py

ann_file = 'data/skeleton/ciis.pkl'
dataset_type = 'PoseDataset'
default_hooks = dict(
    checkpoint=dict(interval=10, save_best='auto', type='CheckpointHook'),
    logger=dict(ignore_last=False, interval=20, type='LoggerHook'),
    ...)
...
load_from = None
...
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=20)
model = dict(
    backbone=dict(
        ...,
        type='ResNet3dSlowOnly'),
    cls_head=dict(
        average_clips='prob',
        dropout_ratio=0.5,
        in_channels=512,
        num_classes=10,
        type='I3DHead'),
    type='Recognizer3D')
optim_wrapper = dict(
    ...,
    optimizer=dict(lr=0.05, momentum=0.9, type='SGD', weight_decay=0.0001))
param_scheduler = [
    dict(
        T_max=480,
        ...,
        type='CosineAnnealingLR'),
]
...
resume = True
...
test_dataloader = dict(
    ...,
    sampler=dict(shuffle=False, type='DefaultSampler'))
...
train_cfg = dict(
    max_epochs=480, type='EpochBasedTrainLoop', val_begin=1, val_interval=1)
train_dataloader = dict(
    batch_size=8,
    dataset=dict(
        dataset=dict(
            ann_file='data/skeleton/ciis.pkl',
            pipeline=[
                dict(type='PoseDecode'),
                ...,
                ...,
                dict(
                    sigma=0.6,
                    type='GeneratePoseTarget',
                    use_score=True,
                    with_kp=True,
                    with_limb=False),
                dict(input_format='NCTHW_Heatmap', type='FormatShape'),
                ...,
            ],
            split='xsub_train',
            type='PoseDataset'),
        times=10,
        type='RepeatDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
train_pipeline = [
    dict(type='PoseDecode'),
    ...,
    ...,
    dict(
        sigma=0.6,
        type='GeneratePoseTarget',
        use_score=True,
        with_kp=True,
        with_limb=False),
    dict(input_format='NCTHW_Heatmap', type='FormatShape'),
    ...,
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='data/skeleton/ciis.pkl',
        pipeline=[
            dict(type='PoseDecode'),
            ...,
            dict(crop_size=64, type='CenterCrop'),
            dict(
                sigma=0.6,
                type='GeneratePoseTarget',
                use_score=True,
                with_kp=True,
                with_limb=False),
            dict(input_format='NCTHW_Heatmap', type='FormatShape'),
            ...,
        ],
        split='xsub_val',
        test_mode=True,
        type='PoseDataset'),
    num_workers=1,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
...
val_pipeline = [
    dict(type='PoseDecode'),
    ...,
    dict(crop_size=64, type='CenterCrop'),
    dict(
        sigma=0.6,
        type='GeneratePoseTarget',
        use_score=True,
        with_kp=True,
        with_limb=False),
    dict(input_format='NCTHW_Heatmap', type='FormatShape'),
   ...,
]
...
work_dir = 'work_dirs/ciis_not-multi_2-1'